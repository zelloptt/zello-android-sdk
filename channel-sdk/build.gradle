apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
	compileSdkVersion 27
	defaultConfig {
		minSdkVersion 15
		targetSdkVersion 27
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}
	buildTypes {
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	externalNativeBuild {
		ndkBuild {
			path 'src/main/cpp/Android.mk'
		}
	}
	android.libraryVariants.all { variant ->
		variant.outputs.all {
			outputFileName = "${variant.name}/zello-${archivesBaseName}.aar"
		}
	}
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
	task dokka(overwrite: true, type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
		outputFormat = 'html'
		outputDirectory = "../javadoc"
		includeNonPublic = false
		skipEmptyPackages = true

		// To make sure we didn't miss anything
		reportUndocumented = true

		packageOptions {
			prefix = "android"
			suppress = true
		}
		packageOptions {
			prefix = "com.zello.channel.sdk.platform"
			suppress = true
		}
	}

	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from android.sourceSets.main.java.srcDirs
	}
	task javadocJar(type: Jar, dependsOn: dokka) {
		classifier = 'javadoc'
		from dokka.outputDirectory
	}

	publishing {
		publications {
			channelsSdk(MavenPublication) {
				groupId 'com.zello'
				artifactId 'zello-channel-sdk'
				version '0.5.0'
				// Change release to debug below for development
				artifact "$buildDir/outputs/aar/release/zello-${archivesBaseName}.aar"
				artifact sourcesJar
				artifact javadocJar

				pom.withXml {
					def dependenciesNode = asNode().appendNode('dependencies')
					configurations.implementation.allDependencies.each { dependency ->
						def dependencyNode = dependenciesNode.appendNode('dependency')
						dependencyNode.appendNode('groupId', dependency.group)
						dependencyNode.appendNode('artifactId', dependency.name)
						dependencyNode.appendNode('version', dependency.version)
					}
				}
			}
		}

		// Uncomment mavenLocal definition for development
//		repositories {
//			mavenLocal()
//		}
	}

	Properties localProperties = new Properties()
	localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
	def bintrayUser = localProperties.getProperty('bintray.user')
	def bintrayApiKey = localProperties.getProperty('bintray.apikey')

	bintray {
		user = bintrayUser
		key = bintrayApiKey

		dryRun = false
		publish = false
		override = true

		pkg {
			repo = 'zello-channel-sdk'
			name = 'zello-channel-sdk'
			publications = ['channelsSdk']

			version {
				name = '0.5.0'
			}
		}
	}
}

dependencies {
	implementation 'com.android.support:appcompat-v7:27.1.1'
	implementation 'com.squareup.okhttp3:okhttp:3.10.0'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test.ext:junit:1.1.1'
	androidTestImplementation 'androidx.test:runner:1.2.0'
	androidTestImplementation 'androidx.test:rules:1.2.0'
}
